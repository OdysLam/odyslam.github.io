<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Project L</title>
<generator uri="https://github.com/mojombo/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="/feed.xml" />
<link rel="alternate" type="text/html" href="" />
<updated>2016-03-23T00:06:03+02:00</updated>
<id>/</id>
<author>
  <name>Odysseas Lamtzidis</name>
  <uri>/</uri>
  <email>odyslam@gmail.com</email>
</author>


<entry>
  <title type="html"><![CDATA[Setting up the Raspberry]]></title>
 <link rel="alternate" type="text/html" href="/rpi-setup-post/" />
  <id>/rpi-setup-post</id>
  <updated>2016-04-24T00:00:00-00:00</updated>
  <published>2016-04-22T00:00:00+03:00</published>
  
  <author>
    <name>Odysseas Lamtzidis</name>
    <uri></uri>
    <email>odyslam@gmail.com</email>
  </author>
  <content type="html">
    &lt;h2 id=&quot;lets-roll&quot;&gt;Let’s Roll&lt;/h2&gt;

&lt;p&gt;First things first, follow this guide:&lt;a href=&quot;https://www.raspberrypi.org/help/noobs-setup/&quot;&gt;Noob Guide.&lt;/a&gt; and install an OS to the Raspberry.&lt;/p&gt;

&lt;p&gt;Now that you have your system up and running let’s make our life a bit &lt;em&gt;easier&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;It’s not easy to have rpi always connected to a screen and a keyboard, we are going to run it &lt;strong&gt;headless&lt;/strong&gt;. It means that we are going to use it’s terminal through the internet, from our computer. All we need is for the rpi to be connected to the internet and we also need to know it’s ip address.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Connect Rpi to the internet, either via ethernet or &lt;a href=&quot;https://www.raspberrypi.org/documentation/configuration/wireless/wireless-cli.md&quot;&gt;wi-fi dongle&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Since it’s not cool to search and find the ip adress each time you want to fiddle with rpi, let’s make it have static ip according to this &lt;a href=&quot;http://www.modmypi.com/blog/tutorial-how-to-give-your-raspberry-pi-a-static-ip-address&quot;&gt;guide&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Configure &lt;a href=&quot;https://www.raspberrypi.org/documentation/remote-access/ssh/&quot;&gt;ssh&lt;/a&gt; to gain command line control over the internet,using either command line in linux/OS X or a ssh client for Windows.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;To gain easy access to your files and folders in rpi from your pc, download &lt;a href=&quot;https://filezilla-project.org/&quot;&gt;filezilla&lt;/a&gt; to your computer and then&lt;a href=&quot;https://www.raspberrypi.org/documentation/remote-access/ssh/sftp.md&quot;&gt;configure&lt;/a&gt; it for Rpi. it’s much easier to manipulate folders and files from this graphic design than from linux command line.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Optional&lt;/strong&gt;: Check this &lt;a href=&quot;https://www.raspberrypi.org/documentation/linux/usage/commands.md&quot;&gt;page&lt;/a&gt; as it contains a lot of useful commands. Thankfuly after some hours of Rpi experience you will start memorising the various commands, remember that command line is A-Z in Unix operating systems,like Lynux a.k.a Raspbian.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;so-now-that&quot;&gt;So, now that..&lt;/h2&gt;
&lt;figure&gt;
	&lt;a href=&quot;http://49.media.tumblr.com/6719493c95b322c8373afb6ccef98e23/tumblr_n8os443A2Q1sl21koo1_500.gif&quot;&gt;&lt;img src=&quot;http://49.media.tumblr.com/6719493c95b322c8373afb6ccef98e23/tumblr_n8os443A2Q1sl21koo1_500.gif&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
&lt;/figure&gt;

&lt;p&gt;We can safely start talking about the libraries we are going to use in the next post,&lt;/p&gt;

&lt;p&gt;Cheers!&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/rpi-setup-post/&quot;&gt;Setting up the Raspberry&lt;/a&gt; was originally published by Odysseas Lamtzidis at &lt;a href=&quot;&quot;&gt;Project L&lt;/a&gt; on April 22, 2016.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[Raspberry pi 2]]></title>
 <link rel="alternate" type="text/html" href="/rpi-post/" />
  <id>/rpi-post</id>
  <updated>2016-04-21T00:00:00-00:00</updated>
  <published>2016-03-21T00:00:00+02:00</published>
  
  <author>
    <name>Odysseas Lamtzidis</name>
    <uri></uri>
    <email>odyslam@gmail.com</email>
  </author>
  <content type="html">
    &lt;h2 id=&quot;raspberry-pi-2&quot;&gt;Raspberry pi 2&lt;/h2&gt;

&lt;p&gt;As you propably arleady know, Rpi is a small computer running a version of linux called Debian.Although it can run several more versions of linux, including custom ones that are made for specific purposes (i.e Voice Control), or Windows 10, Debian is by far the most common and versatile one.&lt;/p&gt;

&lt;p class=&quot;notice&quot;&gt;We are going to cover the setup later in the blog.&lt;/p&gt;

&lt;p&gt;It houses a wealth of hardware for a fairly limited price. Ranging from a camera display interface to 40 GPIO pin interface that transform rpi from a simple micro-computer to a versatile controler of electronic components.&lt;/p&gt;

&lt;h3 id=&quot;more-specifically&quot;&gt;More specifically:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;4 USB ports&lt;/li&gt;
  &lt;li&gt;40 GPIO pins&lt;/li&gt;
  &lt;li&gt;Full HDMI port&lt;/li&gt;
  &lt;li&gt;Ethernet port&lt;/li&gt;
  &lt;li&gt;Combined 3.5mm audio jack and composite video&lt;/li&gt;
  &lt;li&gt;Camera interface (CSI)&lt;/li&gt;
  &lt;li&gt;Display interface (DSI)&lt;/li&gt;
  &lt;li&gt;Micro SD card slot&lt;/li&gt;
  &lt;li&gt;VideoCore IV 3D graphics core&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I am not going to explain more at this point as it’s better to explain the various capabilities with examples from my project. It’s worth though to mention the pinout diagram as it’s very important for any project.&lt;/p&gt;

&lt;figure&gt;
	&lt;a href=&quot;http://www.toptechboy.com/wp-content/uploads/2015/06/raspberry-pi-2-pinout.jpg&quot;&gt;&lt;img src=&quot;http://www.toptechboy.com/wp-content/uploads/2015/06/raspberry-pi-2-pinout.jpg&quot; alt=&quot;&quot; /&gt;&lt;/a&gt;
	&lt;figcaption&gt;&lt;a href=&quot;http://www.toptechboy.com/wp-content/uploads/2015/06/raspberry-pi-2-pinout.jpg&quot; title=&quot;GPIO Pinout&quot;&gt;GPIO Pinout&lt;/a&gt;.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;h2 id=&quot;but-what-are-those-pesky-gpio-anyhow&quot;&gt;But what are those pesky GPIO anyhow?&lt;/h2&gt;

&lt;p&gt;That’s a fair question, GPIO stands for “General Purpose Input Output” meaning that these pins can be used as digital inputs or digital outputs. There are also pins that act as power supply(providing either 5v or 3.3v) or as ground. Some GPIO also have special functions (like &lt;a href=&quot;https://learn.sparkfun.com/tutorials/pulse-width-modulation&quot;&gt;pulse width modulation&lt;/a&gt;)&lt;/p&gt;

&lt;p class=&quot;notice&quot;&gt;&lt;strong&gt;REMEMBER&lt;/strong&gt;: Rpi use 3.3v as logical 1 and 0v as logical 0, unlike other microcontrolers,like &lt;em&gt;Arduino&lt;/em&gt; which use 5v.&lt;/p&gt;

&lt;h2 id=&quot;gpio-control&quot;&gt;GPIO control?&lt;/h2&gt;

&lt;p&gt;As you propably have guessed arleady,a gpio can be controlled through scripts in various languages that use specific libraries that do most of the dirty work. My personal favorite is python as it’s easily understandable and ridiculously versatile. For these reasonons our main focus will be python although we will need some linux scripting as well. For the web interface we will need some basic html/css/javascript.&lt;/p&gt;

&lt;h3 id=&quot;thats-all-folks&quot;&gt;That’s all folks&lt;/h3&gt;

&lt;p&gt;I think that you have the all the neaded material to understand the basics of the raspberry pi 2 next will follow an overview of the project and slowly we will start geting into the software side of it.&lt;/p&gt;

&lt;p&gt;Cheers!&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/rpi-post/&quot;&gt;Raspberry pi 2&lt;/a&gt; was originally published by Odysseas Lamtzidis at &lt;a href=&quot;&quot;&gt;Project L&lt;/a&gt; on March 21, 2016.&lt;/p&gt;
  </content>
</entry>


<entry>
  <title type="html"><![CDATA[The Project]]></title>
 <link rel="alternate" type="text/html" href="/the-project-post/" />
  <id>/the-project-post</id>
  <updated>2016-04-20T00:00:00-00:00</updated>
  <published>2016-03-20T00:00:00+02:00</published>
  
  <author>
    <name>Odysseas Lamtzidis</name>
    <uri></uri>
    <email>odyslam@gmail.com</email>
  </author>
  <content type="html">
    &lt;h2 id=&quot;the-idea&quot;&gt;The Idea&lt;/h2&gt;

&lt;p&gt;All started when I wanted to start exploring the world of electronics, which afterall is one of the subjects of my studies. Moreoever I wanted to start a usable project, something that would not only be &lt;em&gt;educative&lt;/em&gt;, but also &lt;em&gt;usefull&lt;/em&gt; . I also found IoT quite fancinating, something that is going to dominate the technology market in the next few decafed allong with-or in conjuction with - VR.&lt;/p&gt;

&lt;p&gt;I was starting from absolute 0, so &lt;em&gt;Arduino&lt;/em&gt; was the obvious choice because of it’s easy and straight-forward approach. The project did not evolve much as Arduino is fairly limited, especially if you want web capabilities.&lt;/p&gt;

&lt;p&gt;At this point, &lt;em&gt;Raspberry&lt;/em&gt; creeped in and suddenly everything turned green and shiny. It was able to do what I wanted and the best part? it’s codable in python, one of the easiest and most versatile programming languages I know.&lt;/p&gt;

&lt;h2 id=&quot;so-what-is-that-fracking-project&quot;&gt;So what is that fracking project?&lt;/h2&gt;

&lt;p&gt;As I said it’s IoT related and more specifically in the area of smart-home. I have automated some tasks, like locking and unlocking my door, and I plan to add many features, all controlled via a Web Interface.I plan to explaing everything I have done in detail, and I hope that it serves as an easy guide for starters in order to dwelve into both the world of IoT and the world of Raspberry.&lt;/p&gt;

&lt;p&gt;So, in the next posts I will &lt;em&gt;explain&lt;/em&gt;:&lt;/p&gt;

&lt;p&gt;1)What I have accomplished thus far.&lt;/p&gt;

&lt;p&gt;2)What software I use, libraries and scripts.&lt;/p&gt;

&lt;p&gt;3)What’s my hardware.&lt;/p&gt;

&lt;p&gt;4)Future plans.&lt;/p&gt;

&lt;h1 id=&quot;sonow-what&quot;&gt;So..now what?&lt;/h1&gt;
&lt;p&gt;The project is currently frozen at ver 0.1 as I want to bring the blog up to date and then continue with it. At the next blog I will btiefly explain raspberry pi, just to make sure we are at the same page.&lt;/p&gt;

&lt;p&gt;Until then, cheers!&lt;/p&gt;

    &lt;p&gt;&lt;a href=&quot;/the-project-post/&quot;&gt;The Project&lt;/a&gt; was originally published by Odysseas Lamtzidis at &lt;a href=&quot;&quot;&gt;Project L&lt;/a&gt; on March 20, 2016.&lt;/p&gt;
  </content>
</entry>

</feed>
